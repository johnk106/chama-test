name: ci

on:
  push:
    branches:
      - main
      - master

jobs:
  # test_ssh:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Test SSH Connection
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USERNAME }}
  #         key: ${{ secrets.SERVER_PRIVATE_KEY }}
  #         port: ${{ secrets.SERVER_PORT }}
  #         script: |
  #           echo "Hello I can ssh"
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [lts/*]

    steps:
      - name: Checkout 
        uses: actions/checkout@master

      - name: Update .env file
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}
        run: echo "$ENV_FILE_CONTENT" > .env


      - name: Build Docker Image
        run: |
          ls -la
          echo "$ENV_FILE_CONTENT" 
          docker build -t chamaspace_app .
          docker tag chamaspace_app jeldinvestment/chamaspace_app:latest
      - name: Push Docker Image
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u jeldinvestment --password-stdin
          docker push jeldinvestment/chamaspace_app:latest
          
      - name: Upload the application code to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key:  ${{ secrets.SSH_PRIVATE_KEY }}
          source: './*'
          target: '/var/www/ChamaSpace'

      - name: SSH into Server and Pull Changes
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          # password: ${{ secrets.SERVER_PASSWORD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /var/www/ChamaSpace
            ./entrypoint.sh

            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u jeldinvestment --password-stdin
            docker pull jeldinvestment/chamaspace_app
            docker rm -f chamaspace_app caddy;
            docker run -d --name chamaspace_app --network chamaspace_network -p 8000:8000 -e ENVIRONMENT=production --restart always -v chama_db:/db --restart always  jeldinvestment/chamaspace_app sh -c "python manage.py migrate && python manage.py create_superuser && python manage.py collectstatic --noinput && gunicorn Chamabora.wsgi:application --bind 0.0.0.0:8000" ;
            docker run -d --name caddy --network chamaspace_network -p 80:80 -p 443:443 -v $(pwd)/Caddyfile:/etc/caddy/Caddyfile -v $(pwd)/data:/data --restart always caddy;

