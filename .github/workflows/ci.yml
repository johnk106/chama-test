name: ci

on:
  push:
    branches:
      - main
      - master

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [lts/*]

    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Update .env file
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}
        run: echo "$ENV_FILE_CONTENT" > .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: jeldinvestment
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t chamaspace_app .
          docker tag chamaspace_app jeldinvestment/chamaspace_app:latest
          docker push jeldinvestment/chamaspace_app:latest

      - name: Upload the application code to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: './*'
          target: '/var/www/ChamaSpace'

      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /var/www/ChamaSpace
            ./entrypoint.sh

            # Docker login on server
            echo "$DOCKER_PASSWORD" | docker login -u jeldinvestment --password-stdin

            # Pull latest image
            docker pull jeldinvestment/chamaspace_app:latest

            # Remove old containers if they exist
            docker rm -f chamaspace_app caddy || true

            # Run app container
            docker run -d --name chamaspace_app --network chamaspace_network \
              -p 8000:8000 -e ENVIRONMENT=production \
              --restart always -v chama_db:/db \
              jeldinvestment/chamaspace_app sh -c "\
                python manage.py migrate && \
                python manage.py create_superuser && \
                python manage.py collectstatic --noinput && \
                gunicorn Chamabora.wsgi:application --bind 0.0.0.0:8000 \
              "

            # Run Caddy container
            docker run -d --name caddy --network chamaspace_network \
              -p 80:80 -p 443:443 \
              -v $(pwd)/Caddyfile:/etc/caddy/Caddyfile \
              -v $(pwd)/data:/data \
              --restart always \
              caddy
